#https://kubernetes.io/docs/concepts/policy/limit-range/
#https://kubernetes.io/docs/concepts/policy/resource-quotas/

#kubectl create ns myspace 
#or

apiVersion: v1
kind: Namespace
metadata:
  name: myspace
---
apiVersion: v1
kind: LimitRange
metadata:
  name: limits
  namespace: myspace
spec:
  limits:
  - default:
      cpu: 200m
      memory: 512Mi
    defaultRequest:
      cpu: 100m
      memory: 256Mi
    type: Container
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld-deployment
  namespace: myspace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: helloworld
  template:
    metadata:
      labels:
        app: helloworld
    spec:
      containers:
      - name: k8s-demo
        image: wardviaene/k8s-demo
        ports:
        - name: nodejs-port
          containerPort: 3000
          
## here we are not providing any limit to use namespace , simply we have mentioned resourcequota to pod min and max 
#so each and every created pod will not use upto the resource limits, 

#Instread of creating resourcequota to avoid to use much resoruces simply add default quota to containers will good idea.
#you can use any amount of resource in namespace but it limits to use container at specific amount of memory and cpu.
# here this may work be work because we mentioned resorucequotas as default for namespace
#  so no need to mention it in deployment to use resource , it will take default values , if you mention it take those otherwise it will not fail, just it takes the default 
#  valus of cpu and memory
  
#kubectl get deploy --namespace myspace
#NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
#helloworld-deployment   3/3     3            3           12s

#Pod will take default values, no need to specify quota's
          
          
# kubectl describe limits limits --namespace myspace
#Name:       limits
#Namespace:  myspace
#Type        Resource  Min  Max  Default Request  Default Limit  Max Limit/Request Ratio
#----        --------  ---  ---  ---------------  -------------  -----------------------
#Container   cpu       -    -    100m             200m           -
#Container   memory    -    -    256Mi            512Mi          -      
          
          
          
          
          
          
