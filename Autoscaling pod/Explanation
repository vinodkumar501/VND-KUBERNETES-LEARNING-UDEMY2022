Autoscaling
• An example:
• You run a deployment with a pod with a CPU resource request of 200m
• 200m = 200 millicpu (or also 200 millicores)
• 200m = 0.2, which is 20% of a CPU core of the running node
• If the node has 2 cores, it’s still 20% of a single core
• You introduce auto-scaling at 50% of the CPU usage (which is 100m)
• Horizontal Pod Autoscaling will increase/descrease pods to maintain a
target CPU utilization of 50% (or 100m / 10% of a core within this pod)

1vcpu == 1000 millicore cpu

cpu request is 500m == 1/2 of 1 vpcu

cpu 0.5 = 1/2 of 1 vcpu

https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/

A HorizontalPodAutoscaler (HPA for short) automatically updates a workload resource (such as a Deployment or StatefulSet), 
with the aim of automatically scaling the workload to match demand.

Horizontal scaling means that the response to increased load is to deploy more Pods. This is different from vertical scaling, which for Kubernetes would mean assigning more resources 
(for example: memory or CPU) to the Pods that are already running for the workload.

If the load decreases, and the number of Pods is above the configured minimum, the HorizontalPodAutoscaler instructs the workload resource 
(the Deployment, StatefulSet, or other similar resource) to scale back down.



#kubectl get hpa
NAME                     REFERENCE               TARGETS   MINPODS   MAXPODS   REPLICAS   AGE
hpa-example-autoscaler   Deployment/php-apache   0%/50%    1         10        1          41s


#kubectl get hpa
NAME                     REFERENCE               TARGETS   MINPODS   MAXPODS   REPLICAS   AGE
hpa-example-autoscaler   Deployment/php-apache   0%/50%    1         10        1          41s


Increase the load

# Run this in a separate terminal
# so that the load generation continues and you can carry on with the rest of the steps

->kubectl run -i --tty load-generator --rm --image=busybox --restart=Never -- /bin/sh -c "while sleep 0.01; do wget -q -O- http://php-apache; done"

kubectl run -i --tty load-generator --rm --image=busybox --restart=Never -- /bin/sh -c "while sleep 0.01; do wget -q -O- http://php-apache; done"

If you don't see a command prompt, try pressing enter.
OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!
OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!
OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK
!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!
OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!
OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!
OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK
!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!O
K!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!OK!

->kubectl get hpa hpa-example-autoscaler --watch

kubectl get hpa hpa-example-autoscaler --watch
NAME                     REFERENCE               TARGETS   MINPODS   MAXPODS   REPLICAS   AGE
hpa-example-autoscaler   Deployment/php-apache   0%/50%    1         10        1          12m
hpa-example-autoscaler   Deployment/php-apache   250%/50%   1         10        1          12m
hpa-example-autoscaler   Deployment/php-apache   250%/50%   1         10        1          12m
hpa-example-autoscaler   Deployment/php-apache   250%/50%   1         10        4          13m
hpa-example-autoscaler   Deployment/php-apache   250%/50%   1         10        6          13m
hpa-example-autoscaler   Deployment/php-apache   97%/50%    1         10        6          13m
hpa-example-autoscaler   Deployment/php-apache   54%/50%    1         10        6          13m
hpa-example-autoscaler   Deployment/php-apache   53%/50%    1         10        6          14m

hpa-example-autoscaler   Deployment/php-apache   52%/50%    1         10        6          15m
hpa-example-autoscaler   Deployment/php-apache   54%/50%    1         10        6          15m
hpa-example-autoscaler   Deployment/php-apache   51%/50%    1         10        6          16m


->kubectl get po

php-apache-d4cf67d68-54k4s                1/1     Running   0          3m19s
php-apache-d4cf67d68-9m7gd                1/1     Running   0          3m3s
php-apache-d4cf67d68-cx6fv                1/1     Running   0          19m
php-apache-d4cf67d68-fdtmb                1/1     Running   0          3m19s
php-apache-d4cf67d68-fhfsf                1/1     Running   0          3m19s
php-apache-d4cf67d68-xd2xr                1/1     Running   0          3m3s

->kubectl top po

if reaches to 50% of 200m ie 100m it scale a new pod till 10 pods.

load-generator                            10m          0Mi             
php-apache-d4cf67d68-8hlqw                111m         11Mi            
php-apache-d4cf67d68-cq6g6                105m         11Mi            
php-apache-d4cf67d68-cx6fv                152m         12Mi            
php-apache-d4cf67d68-fdtmb                79m          11Mi            
php-apache-d4cf67d68-ljp22                153m         11Mi            
php-apache-d4cf67d68-pz9zk                98m          11Mi 








